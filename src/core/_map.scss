@use 'sass:map';
@use 'sass:meta';
@use 'validation' as v;

/// --------------------------------------------------------------------------
/// Deep Map Get
/// Get a value from a nested map by the keys
/// @group maps
/// @author Nenad NovakoviÄ‡
/// @access public
///
/// @requires map.get (sass:map)
/// @requires meta.type-of (sass:meta)
/// @requires v.is-map (validation.scss)
///
/// @arg {map} $map - map to check
/// @arg {string(s)} $keys - keys in $map
///
/// @returns {Unspecified} it may return anything as a result
/// @example scss - Get the value of a key from a nested map
///   $example-map: (
///     'top-key': (
///       'deep-key': foo
///     );
///   );
///
///   stratus.get($example-map, 'top-key', 'deep-key')
///   // -> Value of second level key
/// --------------------------------------------------------------------------
@function get(
  $map,
  $keys...
) {
  @if not (v.is-map($map)) {
    @error 'The argument $map: "#{$map}" is of incorrect type: "#{meta.type-of($map)}". Type of "Map" is required!';
  }
  @each $key in $keys {
    $map: map.get($map, $key);
  }
  @return $map;
}
